[1/10] Performing build step for 'bootloader'
[1/1] C:\WINDOWS\SYSTEM32\cmd.exe /C "cd /D C:\Users\hario\OneDrive\Desktop\EPDTEST2\build\bootloader\esp-idf\esptool_py && c:\esp\tools\python_env\idf5.1_py3.11_env\Scripts\python.exe C:/esp/esp-idf/v5.1.5/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 C:/Users/hario/OneDrive/Desktop/EPDTEST2/build/bootloader/bootloader.bin"
Bootloader binary size 0x6860 bytes. 0x7a0 bytes (7%) free.
[2/10] No install step for 'bootloader'
[3/10] Completed 'bootloader'
[4/10] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/main.c.obj
[5/10] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/epd.c.obj
C:/Users/hario/OneDrive/Desktop/EPDTEST2/main/epd.c: In function 'EPD_WriteText':
C:/Users/hario/OneDrive/Desktop/EPDTEST2/main/epd.c:342:34: warning: passing argument 1 of 'EPD_SetPixel' from incompatible pointer type [-Wincompatible-pointer-types]
  342 |                     EPD_SetPixel(*spi, x + col, y + row, 1); // Black pixel
      |                                  ^~~~
      |                                  |
      |                                  spi_device_handle_t {aka struct spi_device_t *}
C:/Users/hario/OneDrive/Desktop/EPDTEST2/main/epd.c:297:40: note: expected 'struct spi_device_t **' but argument is of type 'spi_device_handle_t' {aka 'struct spi_device_t *'}
  297 | void EPD_SetPixel(spi_device_handle_t *spi,  uint16_t x, uint16_t y, uint8_t color) {
      |                   ~~~~~~~~~~~~~~~~~~~~~^~~
C:/Users/hario/OneDrive/Desktop/EPDTEST2/main/epd.c:344:34: warning: passing argument 1 of 'EPD_SetPixel' from incompatible pointer type [-Wincompatible-pointer-types]
  344 |                     EPD_SetPixel(*spi, x + col, y + row, 0); // White pixel
      |                                  ^~~~
      |                                  |
      |                                  spi_device_handle_t {aka struct spi_device_t *}
C:/Users/hario/OneDrive/Desktop/EPDTEST2/main/epd.c:297:40: note: expected 'struct spi_device_t **' but argument is of type 'spi_device_handle_t' {aka 'struct spi_device_t *'}
  297 | void EPD_SetPixel(spi_device_handle_t *spi,  uint16_t x, uint16_t y, uint8_t color) {
      |                   ~~~~~~~~~~~~~~~~~~~~~^~~
[6/10] Linking C static library esp-idf\main\libmain.a
[7/10] Generating ld/sections.ld
[8/10] Linking CXX executable EPDTEST2.elf
[9/10] Generating binary image from built executable
esptool.py v4.7.0
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated C:/Users/hario/OneDrive/Desktop/EPDTEST2/build/EPDTEST2.bin
[10/10] cmd.exe /C "cd /D C:\Users\hario\OneDrive\Desktop\EPDTEST2\build\esp-idf\esptool_py && c:\esp\tools\python_env\idf5.1_py3.11_env\Scripts\python.exe C:/esp/esp-idf/v5.1.5/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app C:/Users/hario/OneDrive/Desktop/EPDTEST2/build/partition_table/partition-table.bin C:/Users/hario/OneDrive/Desktop/EPDTEST2/build/EPDTEST2.bin"
EPDTEST2.bin binary size 0x32080 bytes. Smallest app partition is 0x100000 bytes. 0xcdf80 bytes (80%) free.
